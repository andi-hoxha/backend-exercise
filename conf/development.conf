include "application.conf"

mode = "development"

play.filters.cors{
    allowedOrigins = ["http://localhost:8000","https://www.websocket.org"]
}

play.filters.hosts{
    allowed = ["localhost"]
}


akka{
    loglevel = INFO
    actor {
        allow-java-serialization = on
        serializers{
            jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
            java = "akka.serialization.JavaSerializer"
            proto = "akka.remote.serialization.ProtobufSerializer"
        }
        serialization-bindings{
            "app.actors.ActorMessage" = jackson-json
        }
        provider = "cluster"
        debug{
            autoreceive = on

            lifecycle = on
        }
    }
    actor-system = "backend-exercise"
    discovery {
        config.services = {
            backend-exercise = {
                endpoints = [
                    {
                    host = "127.0.0.1"
                    port = 8558
                     }
                ]
            }
        }
    }
    remote {
        artery {
            enabled = on
            transport = tcp
            canonical.port = 2551
            canonical.hostname = "127.0.0.1"
        }
    }
    cluster{
        min-nr-of-members = 1
        shutdown-after-unsuccessful-join-seed-nodes = 30s
    }
    log-dead-letters = on
    coordinated-shutdown.exit-jvm = off
    management {
        http{
            route-provider-read-only = false
            hostname = "127.0.0.1"
        }
        cluster.bootstrap {
            contact-point-discovery {
                service-name = "backend-exercise"
                discovery-method = config,
                required-contact-point-nr = 1
            }
        }
    }
}